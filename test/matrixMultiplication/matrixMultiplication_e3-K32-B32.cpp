#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("2030622793",29,"3389535960302479319",{"1701057308646463212","3865719507690501935","2128491886768903048","1726516041340216284","1531938362431977010","245120829817938188","3053934758412394205","3274771452757312980","2846980033943526646","3802168225701668534","2660380407375467518","2332070189557936122","2491299463191472518","2643237956119463845","1783205081784758796","3711843319150570881","555514124988084598","1264736111666576791","1797157436861341143","2018300627914773883","3729013613048700318","489150264674476333","2704175755028578159","2268948487015565322","604094079926115778","2934737986278878400","3285367510179825292","3122274133891562154","2072061900258497914","1429415937449707115"},"109665185877070237","3468276974339905325", libgDir, gFunctionName);
	SecureInt a[3][3], b[3][3], c[3][3];

	a[0][0] = SecureInt("3073008225325137166",cs);
	a[0][1] = SecureInt("1409766202599514125",cs);
	a[0][2] = SecureInt("308051124998903933",cs);
	a[1][0] = SecureInt("3128819384407694080",cs);
	a[1][1] = SecureInt("1747786034574661897",cs);
	a[1][2] = SecureInt("1173166320165324602",cs);
	a[2][0] = SecureInt("1300712298159156506",cs);
	a[2][1] = SecureInt("3075396212624603587",cs);
	a[2][2] = SecureInt("1347554389578178406",cs);

	b[0][0] = SecureInt("3574863867501246166",cs);
	b[0][1] = SecureInt("2727061883944954977",cs);
	b[0][2] = SecureInt("2819262112108986395",cs);
	b[1][0] = SecureInt("1248461275822479401",cs);
	b[1][1] = SecureInt("3063086404862883411",cs);
	b[1][2] = SecureInt("3914554739460120301",cs);
	b[2][0] = SecureInt("1735088328218917495",cs);
	b[2][1] = SecureInt("1068740877596499727",cs);
	b[2][2] = SecureInt("907775364473650875",cs);

	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			c[i][j] = SecureInt("3025867982192927632",cs);
			for (int k = 0; k < 3; k++) c[i][j] += a[i][k] * b[k][j];
		}
	}

	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++) cout << c[i][j].str() << " ";
		cout << "\n";
	}

	return 0;
}

