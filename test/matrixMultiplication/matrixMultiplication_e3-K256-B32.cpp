#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("78464186642702497137423673967088307083262267293551492961486591916787446058797",32,"5009144270993386705247076744648692428393161223550500539163961746999175279315221992548171498697605851655064287107092573214044514732494527191765415451693711",{"5514255657260968224611384640709345938857277152117957948477262825278453960814551295767307527349470226976361435696888903100321270691443409978794792178225623","4642698175299500287997951606542511740272153754446896251334739921725775114387965200544491562996972473514552688134745548550293930025189012921090977510148687","1987869808812613174970404719380226001787644761085585691753268179814838891917840300739115382754178995379174720818848610154680952371997740059428846331266552","1666000493996522654070402204459208064645521578917627575602226529068430379399394377362453316143571704020998532786281484802317269237965734749822472168939079","1774835518939475919296046368516171529483049579404953949946005087370608722649768265607530965241625236699486545356367630250324945338599588120454450945199817","4883996347115855312485071142257939927658415624129064561637941859877869456976102682765351131586785390182538820568251048077479392280562474087915474418617907","2218710528480196061143134065567220620763538358595400438953954946187681847841443998924285326490664590076897003719037621453403798924371061199485470359467211","3070951401376197820831338555652354139769724564190253412648505473070733096190030909442818867947821353049035266801162241083032670334777621628184452557894957","4485124589463488770304181690886917631054015626861734995829335095200600176977810854148893876072785773269125676148692055549949177745566458009427753813804972","3182599956705138348851791024724208206601021848781169509510904931615423311987550631981793887319000885797947407723974727361707280397662086724394903371221489","778478236914347892871051704511455630489344830947350431783804415353532614738487220275917412675055833439006632869236577615222712212980054059247948464666463","1407313117991154849193438999794626146503225103362942884229833753282693281533424559967023986638464150909722845956949275913459166858973404319714106743470027","5365371004499585032423953998260699765318091616370267703418066872527205576476893446986778349835879814609706632004405836568001547293994623867232298409479837","6019753676991024146916425294907322603710113734107561803720332826731843640023401505036654768229007374172855142943506526874976047971763995009213505639652303","2137408857993779426598995235595113981351927787845763435294631422885117122557505632739206950888171975528964790001308460768134487269535904762102614185974221","5863259832186972661120626031207762928545385582552478621917148921284647227713184870529155631925935909168357804797253214317123044578653062024054571374051089","4092532568009670310277082440039676941108095353843741343719376698439032541319857162398767891601108905648138414182797208688700621112439483490226906915912284","5080415737603532005280666006203777230204272734426830129453201195412151893203191048831760853611382622097308618354167670378545766435916729057334507964646438","3422217617895035717628776797100906554770988919533020288246605310858017625546775134238531127620307401557820819312055006077184773409981405628494575577021877","3177347949985361719720527656735390678243812307256658937837213071749449144293292517489481025630165174205326882133483611413640532840972302243796131376881420","191025531300942875879133603363863828277422575821098069167452245246580010363146169185301536378967210786925282642926892225410053869349395345408567244700504","3603534895487017440841125212384669997849557497412527921463685355730851770053657376041294451623036886127123178295157809914357096368854949036411722283194107","1940216819880275882052386640176519470246075432568118191884885011190769651045090564422203128518632470509737606756716191929872207227305907582898015448341526","614937704558233271246188965642904230696271235562250864088197474326456403981125989108833309605941410401019412027231485363036875759284683794654848418227001","1829664908891717221942269395099792304526497762297372415685478003320468166451155957993205580922063725455568298649386243023199804726017119787183517850321973","4695411776975947151691125392231778879846974782966696283260870668846849110544188104675476327716960704481590140283143024142376177132228931155580710054351286","1074984968778132233539368371206672821179873252749846458687987199671211332503437695417614852700498547207993157458809225586333370283164655705123720791924824","1937108998461702132730559420255617310963290996426312606144822327225134995101969243562695903359396045036787180012299694534667859484598678094717389372795125","5569504474561493201417903696087465038379430360707882438297883489997331505815261257029888208795725291124293239064547798589532579803402149238431065691070723","2299138236521434327312891033394775441961329621965805667738226310611922965290443092572049977015967527257068868724268203133091608924993773209179722916306529","680624178574182141334177071441137919712936012431775976007838357614394048384382341232104152870114392233937048716518450968172661625753572230758139068662320","2286529189776285917896632898033829141647831441133823011626807692485085004345808281892185640135880471473209901821471740208909067503360185782480993603029711","4208047658990595793645886218827448661148093953134850708719273091034198868336625839596867317990542259784532025282603808406613243075887051930724133898736580"},"3205471335322974624494075161192405114034798748801659568368256388773250320298862833673963849352621573000806355060751028652225980279897444323420844015800867","889205034437366855757563449667494112784072538047064944355220719820075678177977958237287842031204407806412678082360181545889984507923215290557211851362861", libgDir, gFunctionName);
	SecureInt a[3][3], b[3][3], c[3][3];

	a[0][0] = SecureInt("4217273866792314810010837765718602683352214120628239989935842196407154036322495546888185031685258442544569825255057039418487661678449940878544958356567580",cs);
	a[0][1] = SecureInt("962208663911352713661489021962603950867522491535870042077829547594067216468223456299931167666117881470246728664512799742238573294197457589604343658320211",cs);
	a[0][2] = SecureInt("2597358907703356945960236361446149586682754269826890796119364622305368075250442406154793316157383887094239435172577146408847272026358192021415156411286818",cs);
	a[1][0] = SecureInt("1337467835500926847562582598398924148962473566293282386097458871826296804862092017934631058746110222120089009525826822964425565057439389120120585310275100",cs);
	a[1][1] = SecureInt("3115014494342165306601522373900236481872554818250026492148067635892754383478610396254762734952780211960976496266141250347521784468186680580736145855973150",cs);
	a[1][2] = SecureInt("279871843254402230230158443525946302940473476862246080140474135412973437162477989712237741203647991028874605272002058431449294665040723316741519108622954",cs);
	a[2][0] = SecureInt("4160410959230490275603113510841306390251206370394891976121976495559659101142912731786119001219677972566140328308278795211280732797486202421759648164757573",cs);
	a[2][1] = SecureInt("2248925025427343385608044488601299306154794203836474043152416961773797393312812718232135879658027026638440335985892980673183021345687783370114067351227478",cs);
	a[2][2] = SecureInt("2350661420187508022098765853043560137037017143524279628603525778112093576340203718733180039315946053083025922675960428385502561597376655596691945696519020",cs);

	b[0][0] = SecureInt("1325509343744479110132185709704757241762817380257969917580574966570507849597869656994880325198120195359555500635982450510882342981570475820504249678035567",cs);
	b[0][1] = SecureInt("5456396691480747685879690566688139950877678668000293059310814326527355554184797447434984904052348487037034064815707573231253639220986239089816520910385276",cs);
	b[0][2] = SecureInt("5912458840372120422745144131382942995945524561130200903699843509989684249777443197515204609799693439405657045455845240860266486854235322985839204211289261",cs);
	b[1][0] = SecureInt("609186615876870584695762319424768820332146692613696186827946626020874852699179393244615966350664304960131365631579970483941475918559095785159813277840079",cs);
	b[1][1] = SecureInt("4877686716827029008130414346548347127942485128666352385976193683506123530293806157404340635290832206132655081114097258023143242688689841154130456558694082",cs);
	b[1][2] = SecureInt("5280973203391123342213210018231854320858136153238135164918835201477472317594703861643747060653106921434280924469818787534394385965024949271683814325859632",cs);
	b[2][0] = SecureInt("646595140384876253143971405038407907267601670166873186103486040604005822054830576578144872090931738971853659474854155034297051475534656310858423387164275",cs);
	b[2][1] = SecureInt("5697021336776723406805518803263862933110321538988741003852670398285519489155273900250831662562505827170149277110059689775885916779130115772779821799310484",cs);
	b[2][2] = SecureInt("5277633399919017587320846184997944485566369763131196660740493158668904031688669004169020041984416992189869977133656352197207113850605025728299814065580917",cs);

	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++)
		{
			c[i][j] = SecureInt("3038999067578231869891117671873625036503386974969949467319072944365288639358900698766118589804061132706784969015847988479515175925962636403812557539649577",cs);
			for (int k = 0; k < 3; k++) c[i][j] += a[i][k] * b[k][j];
		}
	}

	for (int i = 0; i < 3; i++)
	{
		for (int j = 0; j < 3; j++) cout << c[i][j].str() << " ";
		cout << "\n";
	}

	return 0;
}

