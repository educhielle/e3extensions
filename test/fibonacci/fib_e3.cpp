#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 10
//#define NUM 7

int main()
{
	//Cryptosystem cs(__PQ()()()(), __BETA, __2TOBETA, __HALFTABLE, __ENC0, __ENC1, libgDir, gFunctionName);
	//Cryptosystem cs(__KEY()()(1024), PAILLIER, 64);
/*
	SecureInt num(__E(7));
	SecureInt f1(__E(0));
	SecureInt f2(__E(1),cs);
	SecureInt fi(__E(1),cs);
	SecureInt i(__E(1),cs);
	SecureInt result(__E(0),cs);
*/
	Unumber pri("3c
	Unumber pub("4db", 16);
	Unumber mod("5929");
	SecureInt::setKey(pri, pub, mod, 4096, 64);
	SecureInt num = SecureInt::encrypt(7);
	SecureInt result = SecureInt::encrypt(8);
	SecureInt x = num + result;
/*
	int counter = 0;
	do {
		result += (i == num) * fi;
		fi = f1 + f2;
		f1 = f2;
		f2 = fi;
		++i;
	} while (++counter != MAX_NUM);	*/
	cout << "fib( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

