#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

#define MAX_NUM 50
//#define NUM 12

int main()
{
	Cryptosystem cs("112671013453313869969095297838248270178580394531977031569189631512341800544628066644167493240024770890104939761562309383436979648977892003631280554613448854519747349511304309875339586911329468768795574586115866762247235232761569030531921443136536749196637076175617974285905027820568515736067385203262206635041","8","10823422935214137505436512459062752024655636170961167870796835293610742983048168135547678660723110701540548297655017771996320080994827577386393907070067955159024663259644364537387334569485323885693703096602007327115219049564307626445262877414054972326060416917934641917501297921151361407366545619354958100325222633353215331283475658789690750623897341958910463883816353274083032707502125738517235119685824486909944112499450877570414603885786267657817121539277401023031188212321419212776394401958179707618578782372934147730475138677236425510176171228351557434192289782263269973883664459499083725280000995869875509566411","5173493527563763805319767619298180640694973271773676563303934716748488772545104381696243413693916010244728777359225807082005094969749046311465228035629270723435842429064330151350785732580563182513655081716267440987336251606193902651906312763344868252189892409611052636508514293947927075367508375107026383419978168431997730343534399357977220128599415134795615993234312493237904629297726628026191657417227351375664077477419654177383436651822468174438036561189500823114660061122967749661192223212060202193052413132526171989681089022684373645852353390756970428656338090332890027181448739952775904726375504314063880735264","9125565484573076679497572410318472598151287537066845377205902239019635598695503221409570366364580855296284038271133901882201506889793091386237230244281819966285264205668756961367426713894630132703848195956577875826104478286479557754956811634636534322750642937482140108327922452537030565309096736120859818353720845672812265594494587694387234606285216317531024379406210669561315101478614811149724599098847917705202687529958260401427798654038190265436014609735376039507978164737621432886792941501303816764482728757752729140800770368397840107758868201619172316934067799199736635645017213695422712088163077130637677738294", libgDir, gFunctionName);

	SecureInt num("9628253741829200367752399865082947423700595442313057115339600942561906616149777906421407778672689292440730648124945015809701262792431903909896099161935085187477534263255158637702899436642954977915649493601461199855047973809010409546592305557026031689022465814479718979671057043369816633641806618838367475794105639447284168577515476605976733323891414379978130346413531363374523855237058403920307586768347148395906053864916928767666710981149000592668804794066139986047992407866615418801050533020555473060521357658615755040065316371000313905577323756653370317731730979930164256238454727809829697846782537973480333824172",cs);
	SecureInt f1("3512083901569669086145680564749913057529957452458569280827639675560829825991395287947091122684219576935511004945598262306407191859933796105528521221827589958088714765632696658650943176341120482827065537788150327206727954987417076249328115367541054863881983538307993066667643766643980145432320323648892513001979509373075948144665493058698866883755500150987216263346763981073754421642439269942034083339369238297819865178262631627519460758372015758121064960045778214992276663081149125946603910573918361691730373650513545578964321834951682811801102473973766658331067953354205750767014857087922987170366363549277125642124",cs);
	SecureInt f2("11366614866225338051706851861210389749362920108963795620072990883857083253319502289599602768217871090465375696787483763224945740839221905769140197162930406884017131509742226851763744157682776735146078200248340119719368088211236424022778306951917077608002482393983201444044218816873999580882863581860600534853860474180643879770600672381470674382257246122981321162697894717997505974886983193816136968538588028338449807596661938537366306817606273411031425482647961028661350930646411695451020588034163770671787150108856044912396906659819316551807255146875638319328014129400319522074407635324476882192915437022142253775058",cs);
	SecureInt fi("12106821990056630022383994407020460879190271774099158390905201641106178649086061288243046528450330085018313679174060690906256539993154875959924820745513752705203057664509166360943429229767552905430913797800412457979263429047930645297648700522726905097604393039710567091688049640812084257792879429576888562317588895998498560998961805094792200054173372432067210426673096116745802033711923791279349016097832384485922489415690885077998606609523126298371510155317034177765400911765337870117925286386855454246949094085980291665340430520941601886121445567611384430898824624030408973606037554660357375582451886174488351487291",cs);
	SecureInt i("9944193769066472123078727423944713640924007598433168667414347200973671916619612954104373710932634311768131789805233200154062984356798809662919217030889065432696568745855796906949581555193897071419328634056836871638514239815270902803736015968744002662338158117547558716697347501309450530445093089232978758179755692036609664057361660259684665824600859201667070034871697416395940919024152307127348570475486201081725541883794923650717996933825268828697675963038710798416596767846599751740166455735660248244562162586828290295262273150532904004212447206380619733499356401928801829284183935649884551673979999398988199033068",cs);
	SecureInt result("370670709018909088651266422275566083600917731137344023248092747933289203178796065487443273577776991918991555127889965596424395759694217620317231534637951133570277870821485364485856793355355111302384196329959991324261630478107769492355101641118497288569975417706185767565939670381183935145789943613248321832921274420827989346002009583071636126042239755001420706247839120373570516859922283590282638856290965786526211958796033358170846116485471969105905877206089646821046980541436446783558919678414691624072526914139374692572601183830413880986589873864412177892338587886087617333867313302926466254742573242368095092331",cs);

	int counter = 1;
	do {
		result += (i == num) * fi;
		fi = f1 + f2;
		f1 = f2;
		f2 = fi;
		++i;
	} while (++counter != MAX_NUM);	
	cout << "fib( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

