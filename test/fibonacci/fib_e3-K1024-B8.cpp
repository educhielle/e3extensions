#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

#define MAX_NUM 10
//#define NUM 7

int main()
{
	Cryptosystem cs("77896903299327173229961607479675496269934329077480666047907816145028514875201023870069097874707179908325260907511114454057411741888425680777243681798447192034439507492990653641288675586335650445488946489809272615362865797366204468294748771007074706509506704651038917528764078848278680113067537949489961992661",8,"5687584255283017610376183469448146612912058864361587427636961536905075685102974424556484596680844672743153196687129414069109286916981666368896184922959845325764296340085309366995985479261102854039598457598380808401723461187397752659336319851070069184904950445181791328795228477882274194649258601888564845792507346452527482799801963953462870676311792518032130894862363266473141847146858970232480239858367186215709918583693039774656620927668470000264094586146837621480695564371213526922407234119751734850381227428223405950462908900710131639475113968889681223006502183368028968047016275433931043080856409079900550413383",{"1805976368018699131391133212495582445822703569831102142407524536814099200966382541414376639968008427581738909057436914695413752288800347944155998257828976044563720218508501672772682824333280985299742863876300366927974828096142938120786628406240094801222534443581608100604922519267798818208093729848930511493055951877032459006808325779207966068900250732743071320553306191719617400206037792582249493687316079230129792251549820353576817733869671409538075041057781501927164894297719672056986337801051364635173068322186318383713975670638679615291334009235052053757899050057406308328226024427826570691591884019586531153077","1009648832444317138868540646474285411555062082522812579162944750669612522364163176876582153149549376837069412753366095446568837846420394968764483843125059333555549589632076769919593335503144369856042451469736911023627595538644438185212765123442236240710875108579942772970140715471278781073154195225986096451493339807161764335284206341006792685832061501599056738761603520609529145388949715813099089079717195859080034003592628512894639218320969595930841458905684233178632273473824164746174038519338261105273572444906234602969689741869198514022176444998704005980316104622870456639720363495316260139203830694010948266044","5351413153482526339652287388172045678628028517309708362157734490559059329937619151340656965949304036538964566532170584493859047662315136073106358987638782074288149620891467647187271887074552032971608237348850912947911361366431820252877304928633973490279224626969177605360761277768563430125416892805478425958129638216521586361374078943814031978691406464136267861213889308959038634854824723302668379343771303603977848006396550395477238938608425351546269684639789931763697098526688855071509631956617215346448241944279970212451399392548992045064410100084106827392377810368718945619816547068728475445221879333960284718540","4569091746143155905338839118602213761068253897290554294329517626527541078770423603589627028775555953588366528500621108716387998556847036023929653341305173900538842830715037274021466595279663351624225195681177153098106285137396684782820642482471561720593632472019070712069077974856126206301519272629590081560827169528192517526016312771218677798368283087164193476493624694891154274818100356286889507659138859397305532681835336746718584544792032490095843378748745281816755852532666542430483956247876345027908947465696611401221646038266729748250715448347431297883475734119393648532974097693864393118940079676071640187030","4065200639542662864048802577184246545329191904721596260069208085044367764004935787366144231386497436214053150974434465170471531736101340353875661931917612336758194730062098181528039249153036554077199409072862152185714419511393068794737511687055439939491348876401766106190757008535231854777581810763554440495646570965145244997068894929251424359011407821526529674405751261982803081974151113068496674135189238059307303318538008283751455852470589824197473461101134644255448899859958275284846540546649121150529244961228549262841402769975154618022019387076009553001454747669363587257825394528595059435030518626616445257599","5820757235889828226729634397632349730537846078103674268427711345180589653363914414067925812544746523661611373344434687712568622756325954610950679735327926378111710579774830036627508217502449930140697444400084772233934005476836950259372328599930398681557731298392248844609383204636114253556225477684211329721703998785780162374620807060011822925400844062815313463556480493801263269057955080121546257406428005534100491078467231349533808009062204177975861419119876051483175826136540142011899413025854844203129726831132763660083754249764052668363600044780283778308121671604174491121587795376269422364624506922482330443695","1829396001180077642677886443163103808547620819809223245336328527463208072254632525088714488558299425864034489550893964613057619975184124014986787218087862546581148426517467719931699891140904710711860929832906572177655863288362719516496691941468156250310248540362759143766500285434788005699245704981079084080289795001367731842108138641358822756857344695934277642452421947484823617205896174273534961491516348919865227645186867072021541018727617668944734480881338253373440310132867271348861729158782401738400430086397580848195554118304364132766356709903497926589919471277672396275604124808002512996970264571561842671357","401946509527633275365271651224095673668016488392626270946446735392533399487167535059879282070108272392782443828857141017093934498659007779321530101087522805253506108031347388657016452019695212015214967065914799689360536668529401840678533247603318419620808217647524978086733769718774186200380143975539596544132264451426997852220140060808640118834095914093641545794967176293701366870742172091544609139580663638901358169925742371570592422622821372887284645330388142890480912367094863657434226719385407539802031087475956944071856282023995803974154284863170621114658281922249208638745899696118250195548440511321369169783","3548161207910705812339801441655692562177456488818204485755103546525099483288346900267169308711741317423500740432856533486753398883870339924949117937670389789995232951052180856337703778371896841721473329884220684617655959374001174506729442153636906488412920401669915044143628906974211928197654733491863884988181677047562390026463157768269792519569593014234623959502415257507534170879437881585619034978535846722683114465372553393899675140997031185112294965566370447058012791395533748611333391531864713049476547204770892367501011093143321164942462171439372689277435069257035274283042487823664102874898920965579896852434"},"267610817726811909524529278167124233875604424274529642660939439344820493138884488765223449407356822269114213608929848782749317024998177453410474622560906431149014257468485981541969779420367536979896602094177972688151861927559147795166766685587576694310712271149860931337829554813397817226028452290578104040234026515029231061205697972181747771310892427984719167550190637624693274304875517721923630271393092646063554603462242834612662320253148549455937255680761479433032991477685767157709208835133256660993824285064540403315254249606977398333533785105217950377050888695903087350715312641444508525967149028767391469908","3930982356535948694517063691063557024591068121959761429286714020761703875062360697838877556320441946199200339152230175060457357000438575901516227220243842864042761129213637321497764919606519418973552048363053148744058287572984225060550450467703294105370488018275962415335178667727657129219075032082252317795197496140554167376851772898272817600377973686562955226533940735954131052503312131546961127548718946716249282397686796236400928033477915578665001450807645023931400320337277952167617480838391670325250420002069508684679153743414914117742249779297411238047218796327566106272403108707697557862503662355149197416213", libgDir, gFunctionName);

	SecureInt num("2520334494427424327094828118602752337703245567932131642494567445682757817625096006381863170044514847628140448310632831823811380723528606252857925778157825611990088407414962794528202920862301267816265701854627499649541708294459991257652223982734955436960552984306443446384983060311767505180703368204387992003320773450126684064033567076378633220538163279640433488329700235351805675573450832619424777727566565693321999909524702630053227988163783965423978515359747850624696919292206032693506004225310394913162169803744083226002697507700533640836295690558201321099497541502815872333659890934811832838363302063619366802910",cs);
	SecureInt f1("3068888883321461780225567352772425392675399294921523381460019336865338114603979468098631037801998487439279129376193240622584558364131019919699872325155246932255206220559977489597194825803950355807106714293587683245958215373204505700367533617250785611386143522395929026442456505836164443598003441091993721080292207294761543159915433959399118427306007702992690670012031894372451141372864995174782102708909592457982958116305996419049387502319099494304627793877352167450969963985784917772975002846342047696833394624356269043725444567302411444045324762911090830488746365097570324294747031546725305584574624062895921711982",cs);
	SecureInt f2("2391394811960189410515212759646823670545925245285321789640386517335684148303862415145650674313782737356709412815891736442561585830455107355981264487400878114656112693562562859912971968429817720605107137667020620363748262570032027376955520423399193187243715839221823346466779201599736024819691788488633591330561240728276078334250942303783273285099313951802335897534532947554648606514968480523640685274842870722705929452149129192070715200190800246712192915130072469753312775638787598584838939744524325113008800727095411446639531252911846562473271703842150472280499808230073417500926433972103166001998013660240862533181",cs);
	SecureInt fi("429519288928381549459194814809149002928483806944619405801701725184486502872575623633361974803967095292393485661138087894026434676027636407391191319113425069220296937265543076544597872404007320378536590481024353863421448672866359771589057730820484218021649400093699947118097397164286595803037437293126978670756912250409993715227295638316369323363048923706131365646846005313613772323567616915097332910057361970617658177847750504977387079465696860834730064843376968851617005372022441203715320106740859801254317882145894605244217312245589325376017845364221641197655785720380828438753153288696590772903414940450021391715",cs);
	SecureInt i("3165223872196317026878239751828022854127925684745333334660904844518609427102431323331952756688602418511081747893866470147409199488911617421229055758299547422498454666449745796591366303047710227617340824973893520546156560460096109301879779340483442764627700037335594796567446015078706026588941360400186489980004148817617921108097075993946296654138661981459716572624157271027468060761154220487643117465215272644961937784951278818289537707532997195531872569966972790666095022373730225874283234554506302285979732973405526717669318540048297968386410926261410457715636647179950543451373457223315968560404098232539972168766",cs);
	SecureInt result("1622645692297894806537430401268526315441813856099017061945614315434464252142157327777409766082260142035710587582593570382409756511932578128555603294174057304381142085317849261100044336454882965602617539483586119651437928010578393588914069546779149455951900658977134783706704640114632975473667642133497114339563731896424443214423130808010336139668716050906339134329484660447242827626859190369037059515767975260424145146151090676159961192224585604239834691538426579684187169616337916708374344579881803608275935825752898394542785156490263075331868864681259602569375360645154662675376846850936049001229854873989572903723",cs);

	int counter = 1;
	do {
		result += (i == num) * fi;
		fi = f1 + f2;
		f1 = f2;
		f2 = fi;
		++i;
	} while (++counter != MAX_NUM);	
	cout << "fib( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

