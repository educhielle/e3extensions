#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

#define MAX_NUM 10
//#define NUM 7

int main()
{
	Cryptosystem cs("99795664698512787437830108668675804893416934878381636704172312702928658352049",16,"5360655271616557242915243215363631604769642647698821871561141613357085812296897564170922803472394415001094335136935033441284940017429163442906890662761099",{"3546066606338669294414897314503223403999443389174785090851015368326896693693341750024710877478671722357119862870967917979698638468946185067106600283014541","367428637604426905848013812458963762889038875344207515704835762343818556628775589133529970027047557838424892755082281400376963836059201553035367583771258","1434711889060255618351446403572667375694627716806366592170807248305275548973578270421875388617240604914076935663683523734171105244860764436109474450416578","9441936238248330518962304466390609292025347800126559553122395829415004362220726831708415681260297569627701806966243330232892780848547833629011794023909678","919991322343142541424328798206211426656710559204749217440352818913679744972757782810148091359936400336056694861222914751470844856870878719309015843926098","2704082548023245055063993780348009291184643020415054366077586230978159569914243949182193555953938736762418084135421672685849925150356207326490226119191790","4604919251268697178890110372157303457505268392992366591208803925356031845605884741055961935322187493478732903678074798278432304150680476796576167861887231","7139434947654600084708248049449531077847348492111321526096952509438675054003921224713951099350116737791755747051141591549159545622980054005560998700096277","4914593730262679538838347605338750824853402012802357402046288763198291326799101718750973479823286328933142643927891442938421422829988602430082330038097546","6417757083233698409578631316375310762158047819956137265897687516805216729877275780227391274715749389468985627107989822791930922543124457545408698402341796","6274896382265664786212789703567702157568700591320940390626921532572852847087263271220396944935067703910003307575562064859377433200077189231154676106648506","2807661609897604542267273014870170869171246715193568342899003690842763967721091027486791706556198737326612033696964523776022097089740988868773366350826123","165818987590645088204337586998665902958510979893925451271816966377954462692326440348221895856716372655890496081257178007647530217007234158343451188247449","7504588484751625252169914816406735762899938549239541130556153383832007772023222694656702136038739393703459877009768350601370060264267084106094671881081152","787154315919182586319311171377314714807283497206641609204458879157073525930165839406905479763628025818053157898079728359270184751656067682648018429864986","8651826464109592796737314989847695084329679481906426232303874974652478918708141558674085932054874664653383963560625583692198648557688790637135866302465419","9888905710069156386645809623476838411849619030898575189447596066430963596627468938364035208709847816217276941578776238886361246697218541349461651886076071"},"3299068078531049883835505190876181719500544887112534897468854080794312247008685305999394871319574867509627156822683458844435253929808048007422127341916467","4871172945487564267995156037459767494161999635058261265074505039334615689549135372414118792062667188887947621574903721134430985495938882501054977993208389", libgDir, gFunctionName);

	SecureInt num("4206375096162126490083106153614750414188863617043252650510932852382019466554847089016095237402960844028666379112293746454308249179979558348469969422147678",cs);
	SecureInt f1("1425900184592615011837764723224049994350877889060143609069245653319182644159586410738218063518232598514418699789206024488882424054366603521477457102916103",cs);
	SecureInt f2("5790011271988819273443738829468948922752655385268312488496893358265084946136645708959111159504661038911921736504450576155936153363856931535265989828279275",cs);
	SecureInt fi("7654774473651889365783432041110423478345114486220522068454090176416073007691188427193286114304473167688587192013669214725725161165786861563456307001615420",cs);
	SecureInt i("8857261779391698191686190799737998678185943564273245263466798752090035962541972048957788393419920896614236974842746837166986684358013536670154047817131812",cs);
	SecureInt result("5853691253739928197629703865230425664876254781696202220528927040403952155886167662241065372035976721546393967022838211185736446155294985665660551977753524",cs);

	int counter = 1;
	do {
		result += (i == num) * fi;
		fi = f1 + f2;
		f1 = f2;
		f2 = fi;
		++i;
	} while (++counter != MAX_NUM);	
	cout << "fib( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

