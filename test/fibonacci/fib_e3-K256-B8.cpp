#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

#define MAX_NUM 50
//#define NUM 12

int main()
{
	Cryptosystem cs("86940499487377539585116997667726843524021232071596142343952715771483641912429","8","1479559193250288113678548037901275013845266178368614772032511465605796629146232406687800428747783527959144611131149461658385781001462472917692943960801642","5457987469611807456962243607783307924086439908407798602340836317130392901566416511464978444110531845281989618404827434749880437571232350217068566815083477","608650175428745152534457517810089153858687823909546895772017998821677291319081601259069211538697532227908459135257513659152256214855790627033020484923222", libgDir, gFunctionName);

	SecureInt num("5085401630673111503321416049326347534539453427458537183469153405591315620167693124596159256138534226590526207181515777053021995560903405220608542834835460",cs);
	SecureInt f1("2420952947139384512213614034617260587230331827319139709397368748894655658562052819220113347631971420197798182172587965786109885383361765925260462572674036",cs);
	SecureInt f2("4509819057384013230081150033897872848767708910305206662360230412758876937075783498623157254407859786475795071057087959522150229854101618052532090450852475",cs);
	SecureInt fi("1383878451215780723846826514666194265914932621541034770128365807085505857082240672447626926012071030408216971622229778647150736857350090847424789685563478",cs);
	SecureInt i("5713142458256485243070766474904943860733903745818357122948965540436470421374525924315666431711071253307880895722930700191798529190449081781332974033241599",cs);
	SecureInt result("139081406029633809371118484255663314147246219780493978555282777268961498838897581988454449202484708593734183009499653452352444357020362514628853940559337",cs);

	int counter = 1;
	do {
		result += (i == num) * fi;
		fi = f1 + f2;
		f1 = f2;
		f2 = fi;
		++i;
	} while (++counter != MAX_NUM);	
	cout << "fib( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

