#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

#define MAX_NUM 10
//#define NUM 7

int main()
{
	Cryptosystem cs("3642976361",30,"2626958390265056183",{"4639195958836906604","3979860004589630791","10006617865601162329","4938019779797289828","4116143705193408633","1389043712186265384","3986547874179007417","5142681857104253651","8571404376751764044","8140524568229373791","2867649761971627216","4415806609695407246","12291799048929567512","12495749265158294948","1497143116116970439","8686930173293140067","4650392668181894092","4068352177521549234","12596429868311387259","11392228044228490509","4790744442860205219","5390426942147314288","9571714090254977185","6060507692942397641","4576788285682494799","8523733088181114879","3627067797910781058","8600983833656350819","7024868864101094595","5023510953333053482","412930554757430315"},"12408778872039928731","9358201785862627744", libgDir, gFunctionName);

	SecureInt num("12135415413287908789",cs);
	SecureInt f1("3964928738038548769",cs);
	SecureInt f2("3829426857427603062",cs);
	SecureInt fi("1779500997374286239",cs);
	SecureInt i("12555056022951107657",cs);
	SecureInt result("6297851639807246417",cs);

	int counter = 1;
	do {
		result += (i == num) * fi;
		fi = f1 + f2;
		f1 = f2;
		f2 = fi;
		++i;
	} while (++counter != MAX_NUM);	
	cout << "fib( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

