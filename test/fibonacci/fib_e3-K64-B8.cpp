#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

#define MAX_NUM 10
//#define NUM 7

int main()
{
	Cryptosystem cs("8043946903811521301",8,"43824554848728639433967010061386312711",{"45930223455170798651374321357517512407","62001015165965472942461032289432965367","1834898441379477474399767856675059847","12571645177877414821812612324365993016","17892240581652536798568548925466636567","44665060310639982724698045401212693098","60598827792445380841171497564531525080","6557275009622203567691699138259112978","48576279332861320573414576171045187663"},"12744181494726750163912574115822616599","25335066935019541865164781404986804207", libgDir, gFunctionName);

	SecureInt num("5887604012015154349739933487967268564",cs);
	SecureInt f1("51792880763136261694537492034371429089",cs);
	SecureInt f2("14815073116151662584973511415495333641",cs);
	SecureInt fi("31869298088994317416264955239964441692",cs);
	SecureInt i("14294243324374403190716845787910205378",cs);
	SecureInt result("9602616316391232206731143070500632748",cs);

	int counter = 1;
	do {
		result += (i == num) * fi;
		fi = f1 + f2;
		f1 = f2;
		f2 = fi;
		++i;
	} while (++counter != MAX_NUM);	
	cout << "fib( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

