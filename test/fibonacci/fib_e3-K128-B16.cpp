#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

#define MAX_NUM 10
//#define NUM 7

int main()
{
	Cryptosystem cs("197584734043055577000263825035398221629",16,"19421472345306161151507272236091426385215364258611799014662776180899499613405",{"4743725004983716629355818393762894249425178628884843438017203122387425312247","38382024805909195759468123348968697148835010073352170485217384950929824151849","25396049411971695783852171086832408608882506267445034286671419594373751903057","8557220004998609083813109562008910869415442809092836739523822522249781881576","18474412644041929467906894497662441490041100773032251499419676725407767011496","33665719979429292427002330288242134968450434661130656486110817255976002104142","9394502030153123029629155927990097030530997682258697481360999651521416494373","17424145634577577837634683458100357755568245398619370057355892633001265712986","25275025255415754837773437842604833070437562019844229407188416025872193965029","17813103384087681850413153001044836911244592357483436258184975032053048972302","6722665655410371729473834609214208811262699277716796879439944053868365030772","5979587389473307877826846230774849280503992768310061602675558462851594679558","24998050870979631628264798125191464785084321964439044207958342196468216965541","38339722749301137356984581252418968722384464842616322287210492829233376449265","449079231836269038568448107956685462037422343956214818453723669722541898192","25932239344293970489475508858917458821711650932980610354547794754743072237907","19969016439684875625789125547700465285118348191548259250286110407880160293017"},"23922788763042000366875571836331680829366679895202060554485141477227228865806","30918575129607346754261780235966882874782835798375495493399175704618905221262", libgDir, gFunctionName);

	SecureInt num("28133276538146670222464071891160938988272751832473129927572630967978098234935",cs);
	SecureInt f1("25492657537086624387032442540432993904848325086588307080425239982344287846030",cs);
	SecureInt f2("19430790276455005780625288855013841268885837616069572722518781797068031115586",cs);
	SecureInt fi("19441501062150363253703145869707645055537475446403013694344521193425059767436",cs);
	SecureInt i("14019530541399652291390945650589510093877052818734032322607475737190839227823",cs);
	SecureInt result("20522653410878729093244343168367905906588404470950837808257231198526340955246",cs);

	int counter = 1;
	do {
		result += (i == num) * fi;
		fi = f1 + f2;
		f1 = f2;
		f2 = fi;
		++i;
	} while (++counter != MAX_NUM);	
	cout << "fib( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

