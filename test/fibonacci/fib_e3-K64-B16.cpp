#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

#define MAX_NUM 10
//#define NUM 7

int main()
{
	Cryptosystem cs("7991094391732711741",16,"61703618375566186403472447581015628539",{"48357410861681745312592322352775714335","18183326173196962471355342036887152703","31097178470400706682240379408166934857","9837162171744208747827692051033082699","14025986028544806815521275207373657625","39039898950014089721943096340815907454","6765015600343269341135479390747018909","25629749917748920404568320740982410288","12394175510393215597563823708331078523","31239524361318689631051001535361344516","35807320770284687288109015920195415584","9748876792735554418390909757797332922","24320276670859480775942418222789427454","7276240487460845676533686623542834351","30709016908553259951942979584278117971","67906224809770260815889947565651255","16715065182218827292183793339182323329"},"61103357752986596986205684095946311419","52349883237260898868287252325179391811", libgDir, gFunctionName);

	SecureInt num("59169939169060913050144680112066874626",cs);
	SecureInt f1("4969123256291163586530325862077537395",cs);
	SecureInt f2("62059812582513177357988487618614622909",cs);
	SecureInt fi("50067934073969990375423543468492587968",cs);
	SecureInt i("63127179482258784599964594485397457718",cs);
	SecureInt result("25702515973105078071504357985285605755",cs);

	int counter = 1;
	do {
		result += (i == num) * fi;
		fi = f1 + f2;
		f1 = f2;
		f2 = fi;
		++i;
	} while (++counter != MAX_NUM);	
	cout << "fib( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

