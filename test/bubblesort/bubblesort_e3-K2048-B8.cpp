#include <iostream>
#include "../../src/e3extensions/secureint.h"

#define LEN 6

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

void bubbleSort(SecureInt[], int);
void printArray(SecureInt[], int);
void swap(SecureInt*, SecureInt*);
 
// Driver program to test above functions
int main()
{
	Cryptosystem cs("22368293495193704311864495216470919178654433939595676634106655056064692192520447893611202966863286674730653082045776892299847776004511230839508355926318472542795080285515562789108894264553551660566391212666958377003502465611329607613001271196632099397839747081963611079888689033086918035088462484159015909943649327309730067522551945829294034321409200071478120561439055099916325438256808332093895822917878737461337927120860098513031268548977531615011591500766678182272977600394542160525675871888977318672072424886914229524714828756368083414950511638393895139882374619411951641668372589633054980695456934999727709981481",8,{}, libgDir, gFunctionName);
	SecureInt a[LEN];

	a[0] = SecureInt("497662787585934696222421382571991083727863915394284909343720357387443226491792763416936019201632109848257449228138644370671329649784164325430025393548666502724980132600817916965748802821186908831297091557591836227929360991007674972276836785680288038290638375560742710094373987616643547974106163000952264350980560134452576991053001126101262610885763660787903175123172407087233051479670490037117490511146078436662864632166550576711278988697586216699210289189363884886423751086806196902455969582082292215762331622462330516683012139596232785553311253236090667925793777387601381124875391762549578511266800376778222701363046037264927347971527518225279215572992106874002928114516641299945868189966718811559121753734921005657624982675972124019184494835997492493463333751820805372176584285655687269226513503555235118827032970318817969015379442002034817020429623948446497020036767911247917641961828627120251080205212265230254821203589459726113044909625456166298863318818329310900415928105043756601141680028491107554617947701405231769743681410421672087922631654980203061510326708056252709831755848337142116166990645299843022986511207845167543829685526998250756093900535845040995680052199822118303595310698400101424915801191665208692705350672952",cs);
	a[1] = SecureInt("315030692577017477928366397471065174083364817718708341028908829095730834391521455506269170864618053522712783943882159166364192755041083209820550859070214522242849272072059531390025118509561447097534413470906231300945421691732638709921638978373429340895855235687411986882169197828531357522416152533653198805794311047771953608766608917006461574803676008236713857648208167087409515407324839441087497313902530202145435512377363826539804780281267133185513561279026533760545911012412461344781069849417500445302947613804197299822246460764126388529406904222694017007095407114652591248638977670415601055957040224642427931107708608339611598612695996184698342082957769930481107104220683593707626770217391228087434680850258808025006901426536576395540590516984522137057237099035425736009698737870707946363330851751800116856793988028127755816165577198198467674890060827380470604784778229506974486060785494953515163532933049135563383210099708342863909533713706466606201919061557708363634371169870102409213650488561219970121632088756734446205986449577671529839721118773875402606981118243759930901109881334818094683703184665250030249748619102063722487404264278561288303499710817263240898231583825469715662071971925042853710710214273624365327374547253",cs);
	a[2] = SecureInt("67297126954412443806236491215953182618650313735669499532394069404416173948955614167645217262194768795619013975747549268655388003001268868106690002172268837782725507107792924358076758050202027091150184923188086565555542236170279201182218906273544308312571905277723488353719104777769163777360647710633312641308392587272508470540600703966868820025356574627308994181498879971893830661384932980225344877517297386247758873647030614034178785505140417365358952948468309202496865862705853057538948551531030482125749807499700231556603242406981910918035901435098178942393301026656037141099340824191064724605751883515043557686935390848974359349798925484047672546902371923881813375200959855095594741182845403599580402638143145258375773857564793286967192602705858629955096124510898246118937537875124096444358376018925318144882858887689259767928081633459873010163817172169329036916953908304060976887257407654246352837236905413046803413715589155491127996285887754714076194813025151855247662326440737305743987339799669112703208020905018858776662693690176041659899510822250361533073213612013298329349976090954144867791899239909198310489259812982402852613376220572194192979087520163704939369038648288121371086012449485477099946074159301325866793852209",cs);
	a[3] = SecureInt("165705180927861482794927755564081776919423054795965949714338168102702363624860436424411950907924239474442447057197421177804615737489400962459251309788590717993901648032617648032648357321990362490437859723291123226708655150510760410857951500524765388039817070134698181121563397663996602825281273554888745909747176246606291372342639836839989038031913690450021613893016554795774039264119308192839848257666465789775332398816955993919964520460090181352778001939999447405052397383891165113987577843170183520147552487084197107246536134308654132469925238683642864616883012768274585725610082972351504480394566851436070487545324696980810258968611617918037060170810064366867041836076134212617801227465386356027869044229122040489047555408171326027488525413003506361239871543047785825836787287200610608456411312788237952138942948969103202795285217399778694593624585468723290744311562812635463925445497010737614966773153831858433859218082788402511834588664732942849049832368510277994101639883546147801013588358680848200904639320407608336332515524519749678320602742729868319886886000384535379896863065110205009031684991980718643407478920111420025757181716047894414230624929782444597002792743180527769931880384124704755021612768227254475155095545606",cs);
	a[4] = SecureInt("371253532661880568637178708865669024912609401337189072204047644760990876782045022316827392503976025053439253836972340176940161078682652709838291144280913878990688924890499286081831519228139351842314312830983630685432703115076983879446619526210569422698757748400974207733942171575966142451416210894221713216715614028574132454810826209832360977845178825827715902482496135034458590652047005420374657379970196156610681863507379452753739187743439537658083514196432333002547583497816532152323893825173079516872485048784088698931930993454247865082392229442355321418669683197646102710980782868435791985939198341272048464434173288035360533123082846262120935237099922212651957561358647252794794129872091717793506210609616772704797784441010944108394054266123314206421966042480530924151981889310651018402855362780419712755915957207952117258945660036661106498166583534166549143377560741388511077678731251106462391076516699131269280181424104343846302044267507211429977524343032070713721955839384230976835669272249424091766656790992251819199459833839500212986817063102468758650941423690666274304958805628760454293211220500560126230732729874541870766563838379502210629192790990204513904864046797283248463393158973821282973000055078473444393284020856",cs);
	a[5] = SecureInt("206612450303087260298211115333495239566833292641609554051616836803055709575379208771843400689301350203673107658894933106586195156160484200708236560858715279514762133602821626907013372115487696060155045149249859612299605185656187137670910893281046361717683778086285169342440079927665422829297089697152099938791410210065388048741631789434446466106427683745343662611907830540041296909580623088546056099509394398700621713064135401780163513827581917124889798378262765407477147401315680720711871020815866901932781489369817402113954262597997666598265605487700677414423663084906263618507809010108486391864725218004606234598844718124806971126697347137625853999557528794626571403262583479671465885751324777641899613006695447073655879420321242847052547444634574616824453618731120387721945868022475368184777008095877775815887294576286352684776337638110924025514495294480668713102351888793623837123387350259407475250519401214597536809376295165817559128614872628531313814299181855544129014833574012912756459567010684917201481816557431283727158355854438853611269533520385191140545691298865955317295327988432062608197700161371892125869776533962663599363818146202331839637111680451893741460013888019236446457355087553846601993745344820320126529607352",cs);

	bubbleSort(a, LEN);

	cout << "Sorted array is:  ";
	printArray(a, LEN);

	return 0;
}

// A function to implement bubble sort
void bubbleSort(SecureInt arr[], int n)
{
	int i, j;
	SecureInt cond1, cond2, smaller, greater;

	for (i = 0; i < n-1; i++)
	{
		// Last i elements are already in place   
		for (j = 0; j < n-i-1; j++)
		{
			cond1 = arr[j] <= arr[j+1];
			cond2 = arr[j+1] < arr[j];
			smaller = cond1 * arr[j] + cond2 * arr[j+1];
			greater = arr[j+1] + arr[j] - smaller;
			arr[j] = smaller;
			arr[j+1] = greater;
		}
	}
}


/* Function to print an array */
void printArray(SecureInt arr[], int size)
{
	for (int i=0; i < size; i++) cout << arr[i].str() << " ";
	cout << "\n";
}


void swap(SecureInt *xp, SecureInt *yp)
{
	SecureInt temp = *xp;
	*xp = *yp;
	*yp = temp;
}

