#include <iostream>
#include "../../src/e3extensions/secureint.h"

#define LEN 6

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

void bubbleSort(SecureInt[], int);
void printArray(SecureInt[], int);
void swap(SecureInt*, SecureInt*);
 
// Driver program to test above functions
int main()
{
	Cryptosystem cs("6358247555337917641",32,{"24476123655173121224136649089981137471","4281527913438216417162784035638002311","19451539809578232936528300963590990652","15361969631990036604777805161998837007","23972384253937029166909285129249819248","20974779550831523633643143731789007728","37281040018175307264811648284568133729","34737893322070298216665419952368022301","11414361374131315722996817538258842245","486614263616254484969488743592100753","10257415252186499655836509954725173043","29569294316209294074242495456512028662","23014771331694537681786904764228902557","37741680569530287521976278596910153679","22336869991199220415602496902647253730","2140808567267525763747325441048703478","9531466159600769453265585424718764898","14267193869491918275419425466460861687","24191759924335144622295058506712715827","39726171359358091415988319627042085495","38286244461069653916087588969107979659","19736341154921600067134898383308002845","39338363073590248238692329168279761584","25780796924126880861861449900576252917","39482148937684909300566955532662247792","11935400717583886410804845980368262133","1697344545329669806643784285821756908","2958089754628498168901698723781739905","36517709988988068515553808324004569708","32783448244884994725779327064009807339","29018828754836787319890192749776931468","7823704478280979271770683754030940032","3500689016602909562949023868189450356"}, libgDir, gFunctionName);
	SecureInt a[LEN];

	a[0] = SecureInt("28102641739226113005579670722745936022",cs);
	a[1] = SecureInt("16882491107867004090338912735160764399",cs);
	a[2] = SecureInt("4819998904308472144964493589209694024",cs);
	a[3] = SecureInt("18258956497860494115385067034003242463",cs);
	a[4] = SecureInt("23369552211499173496086871924622079905",cs);
	a[5] = SecureInt("18006221965679143806828485046332499018",cs);

	bubbleSort(a, LEN);

	cout << "Sorted array is:  ";
	printArray(a, LEN);

	return 0;
}

// A function to implement bubble sort
void bubbleSort(SecureInt arr[], int n)
{
	int i, j;
	SecureInt cond1, cond2, smaller, greater;

	for (i = 0; i < n-1; i++)
	{
		// Last i elements are already in place   
		for (j = 0; j < n-i-1; j++)
		{
			cond1 = arr[j] <= arr[j+1];
			cond2 = arr[j+1] < arr[j];
			smaller = cond1 * arr[j] + cond2 * arr[j+1];
			greater = arr[j+1] + arr[j] - smaller;
			arr[j] = smaller;
			arr[j+1] = greater;
		}
	}
}


/* Function to print an array */
void printArray(SecureInt arr[], int size)
{
	for (int i=0; i < size; i++) cout << arr[i].str() << " ";
	cout << "\n";
}


void swap(SecureInt *xp, SecureInt *yp)
{
	SecureInt temp = *xp;
	*xp = *yp;
	*yp = temp;
}

