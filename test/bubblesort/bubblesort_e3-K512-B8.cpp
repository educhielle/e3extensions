#include <iostream>
#include "../../src/e3extensions/secureint.h"

#define LEN 6

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

void bubbleSort(SecureInt[], int);
void printArray(SecureInt[], int);
void swap(SecureInt*, SecureInt*);
 
// Driver program to test above functions
int main()
{
	Cryptosystem cs("8257344360978708042808828868781945533932211690225560632664250774757651134755352165687340358263109056359730517592781666618109393670477769941922134124617269",8,{"59726244949537993264209816284186614984854269997003486365231219825124258589070475820337436727521633003706318506377220840289381760760159934775567268447463790415055709621445715705483476881912265612181114782186932067193630855698208697031333484104837838969871779553159152646606063065250780983784105200694166115262","10033172789848377919190096150562574963003928683025257349221672066762015914630486859016003201725705346180389007458361084677075954248017400592205294465651835178869767267227700282006298210228364090476906956578683782213119215676737100182747865855660202691646331146605325040248108252278817822662709302374384534505","19840101019834050103711459485838456308314879554718411670786974408731900151693059903368524316887014297455569137369141664492451405763565731200765476465353367651979956059945915003747982598746689636302985965883713534137443326551861978923942697628803706806558476812012812304579534449333238041915242988141166094673","37672803899715561048927746332257011335360272828192775695606588612496446159253462719159247084063416221737106950706991698856533388521822920897633889740939891198165876004096277348242614923963177077387861789533774259282674347964151622458860962975415600444124483376084627005333558625434023878748866081500915604550","60252455072126973746333109536358139195571641237130089093823247828116209509587312433555179354805070522434267724572046920691711661245232167315195073975927519353049440582842591428668467513822789601929892197742127651533844386440451684157451114453622180221257178739641713916706365687133375367552572616683180787223","40348859859090166819032447495353167081917471079101587630626685815052250498819624509099857240603340783554366403867846640201564013422264410706518182382767673093979982129077199634850553863587399069870895643133873469396459002188155925203126523476035374341790779916389671175537884337579923982240838763169159953796","41200059113113625179540074737703450599922788445199200558753488680871482591106565978626905809199587698451248883903908215164815486447792472038815927856879292267241409114090103351249363573227030633742767229721622650900305947215922965266573899903034730775818502108096206048113556792602121561731800905404881501789","35910750905322889298946364135023305289412455866159134197970179099961742403211578214929267575607308954406671668863863739333210455585015094971604203263311522967198548386119717440691901304718892422758424006401447150128142172576925026931160495926224835526801092983927350944384326766192586599469180211069061095200","41023093700597406499487944246733372045267334585244205660197520003251838055574293566802377822665305270588030427194148663685326974351468599889610839417409873942951739160225776491969137955276283019058749291780920219529667330693810456153300433775122584799796359199202903337373634207513342438549048535472913127049"}, libgDir, gFunctionName);
	SecureInt a[LEN];

	a[0] = SecureInt("38682023179048656805993718130375866866000468832812676074831013427104939210676206539830606238615978704100450919310636676427291474058845990399106887139117687274101829498889581501434055632861650990075225495465940563898385604472979215762251919430854695617050048913899145516821054820719205451009773641812634153459",cs);
	a[1] = SecureInt("33169323695382871715716092961920641714015372535958007505094078302305459395138759338597317179928290919963745332453662603368953995346974112944955985199499223138444079956722503669058309364545529169584497455542289534584589542442064639034075545333870208168440880778659760409987154277918953961075771536746857590077",cs);
	a[2] = SecureInt("26774773477689735925451502611771306719412147440517145613050221129887844536721475630439973610953538837819741709936140778924818992252242520699351435324910803191523915540684827721965577909976555966953793029317084445227657926978887702601908469336970860772149818516741705193537036217161364268768045697624197504556",cs);
	a[3] = SecureInt("18001709639884298566112204475280106393735773005414266923892834931724957848849401074869121704592792112232821781617986651168178260226902876389807057482531018549515928175899340389505896198371047948183424775330684758220466183916736752084829441426572427637013696273630470378641391105373213823976753756489687786617",cs);
	a[4] = SecureInt("46716866073798151614946299277269803157446033241517101750742382898138439641028249166504606107278776480355330707523737341318420047280787377408796843131668084589447378690879645905837867356247015636532410889360006835725773340834017876749703302813452280660272236075100226371169284828950375103638689451041922484721",cs);
	a[5] = SecureInt("20903589609047440704984585048389135266955407185893983581063206047504989070677487066128107484409971585573453607761995067549254804322244936506753731609711228541589507551176566833465665335711409728826627215694496152919443167602708823372474793720454984947008074836851539576815582232730762956406091840324418702353",cs);

	bubbleSort(a, LEN);

	cout << "Sorted array is:  ";
	printArray(a, LEN);

	return 0;
}

// A function to implement bubble sort
void bubbleSort(SecureInt arr[], int n)
{
	int i, j;
	SecureInt cond1, cond2, smaller, greater;

	for (i = 0; i < n-1; i++)
	{
		// Last i elements are already in place   
		for (j = 0; j < n-i-1; j++)
		{
			cond1 = arr[j] <= arr[j+1];
			cond2 = arr[j+1] < arr[j];
			smaller = cond1 * arr[j] + cond2 * arr[j+1];
			greater = arr[j+1] + arr[j] - smaller;
			arr[j] = smaller;
			arr[j+1] = greater;
		}
	}
}


/* Function to print an array */
void printArray(SecureInt arr[], int size)
{
	for (int i=0; i < size; i++) cout << arr[i].str() << " ";
	cout << "\n";
}


void swap(SecureInt *xp, SecureInt *yp)
{
	SecureInt temp = *xp;
	*xp = *yp;
	*yp = temp;
}

