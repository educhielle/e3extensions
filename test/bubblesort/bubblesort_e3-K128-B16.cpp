#include <iostream>
#include "../../src/e3extensions/secureint.h"

#define LEN 6

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

void bubbleSort(SecureInt[], int);
void printArray(SecureInt[], int);
void swap(SecureInt*, SecureInt*);
 
// Driver program to test above functions
int main()
{
	Cryptosystem cs("158949500351981263623899272228022008789",16,{"12875053097421956876012223731094708850595477226547398311546968880594833051186","9792760736222017116049028023420551025268712655311829490539306898518817098503","12314218100902251070415811745868857864545843870825103713659930572242824246642","18319323110879904923045570407098191724062646950887298865705786404587584938140","21708433067850255438638597360588622870911239122887454597726477970423767510792","13156702098644509905148144213109829948513916018115197861368941035490299611387","20520775846602165251206573501264069562834042179984206339245445903433814519874","21439697074820481682671192270389520950560027848407909440203923073510759886664","11237315136768678391208845382591073191896189438949125750221670335254046246497","4883238441344193693858177423155074779762111886295252402001784835878659537830","23272774665742925066460099127194214531075607385110523701791224045031744470766","16667339774851778803366609910750899659711115888561736413756714936507951079751","22597153323290689876851971025063117688316193441362145136358026793570421106290","8706662277503961767390760739009748407116600143341119843241539512087685351319","3374543647061978801056210862804666046725945531216240228857605368673716433784","9369699551153519978541155565254071993315308353714278993896309710177821717188","18819573806816905823394368184650172203940002689835207488639266046234289818223"}, libgDir, gFunctionName);
	SecureInt a[LEN];

	a[0] = SecureInt("9385043483178985598965613598783273430208206877138949848959921473571410717805",cs);
	a[1] = SecureInt("13930623122176193245418315933301184170043389203191786196625174210683131186538",cs);
	a[2] = SecureInt("8018237364188244040021284035634663809324301680897444477850433742386879198652",cs);
	a[3] = SecureInt("21595970819577482160784916980544383491938871367205152601329050685956510443835",cs);
	a[4] = SecureInt("3971185767436921851896808189517521469265804518660008292099034442541589872914",cs);
	a[5] = SecureInt("9339057521030821373452345762889945836021558363554231805842576360008713737594",cs);

	bubbleSort(a, LEN);

	cout << "Sorted array is:  ";
	printArray(a, LEN);

	return 0;
}

// A function to implement bubble sort
void bubbleSort(SecureInt arr[], int n)
{
	int i, j;
	SecureInt cond1, cond2, smaller, greater;

	for (i = 0; i < n-1; i++)
	{
		// Last i elements are already in place   
		for (j = 0; j < n-i-1; j++)
		{
			cond1 = arr[j] <= arr[j+1];
			cond2 = arr[j+1] < arr[j];
			smaller = cond1 * arr[j] + cond2 * arr[j+1];
			greater = arr[j+1] + arr[j] - smaller;
			arr[j] = smaller;
			arr[j+1] = greater;
		}
	}
}


/* Function to print an array */
void printArray(SecureInt arr[], int size)
{
	for (int i=0; i < size; i++) cout << arr[i].str() << " ";
	cout << "\n";
}


void swap(SecureInt *xp, SecureInt *yp)
{
	SecureInt temp = *xp;
	*xp = *yp;
	*yp = temp;
}

