#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 50
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("60163986751680382912699403249930303591819814577891598808485371868377490468178711125305089086850696716210722384399647033384461269868763151595417260380368007652334415204314245089056564736509706448337509092211136157558432673453039966739480374918185522591890307342536106358443803370072891250139822141566177553257","8","1877775850537942082323556049605674077978761192985109011322188974715099550197855030302613161263852280865565613633903313639372467585210688173761931251897837762768210900768311863541785552438009889978985834192460082688496198485759501521483486570198317501537877181276172105905543119688321671423318902140943273397181901682722461842540306074041011839224089092600065070507293508345865850033562474725880035381592930155744869547375532264956041470530841906226079637971928842297355635819092554036560399368753654078799781868427001645907954714110407717601459522020167986901378910779441289627479896391204779593779332872739968565072","1483330312806299470146510443323468833308172182919068398701978799266535939267028940404295266643826085338584942900971116125502924206057441346963577405936586227452559939389707924693548340624615269450159466323162552043548087487577048456743470330595201562003223475641400500677924264628728612897425649630084925526112743293185285254973056960865738087501132842962370651355136702808507788174553135627863927350677863298069600628687623709230717294757432188471430909406780308963714378167741076074263679952498779024969912309561487643756758768915444038301288218898776059931570914343712380554794741373563065165525446001935269427038","874142487333946198058875034352600870724546279580127683167614123842682695216287387480444626046473273788152649013711647032866376962291388593476426510943737284561557230515576651103777729021278623275694465106194625972895162774260675518432008477587941150641006679130691059842389825846884548402958840992352514345305186947190761259994322952716616334288544421105072617664381527500920674529065927635321778470084927763766110052314194536449206115563275946700953310878444422548260731016472090775798498858956206452220143745131643054050859038519944835948073664684228578292209229467924246684531816201149051960848783913594695733071", libgDir, gFunctionName);

	SecureInt num("2030288375484974056142538038948218240820999693253824688182535848531783476004594579560130167225310759861945032728785170919397692587400749328625625222735869291300593236416659072609546706510828436082980998745214989123186699184832714205079549412281512757527017330982362958495705233303111443086867022481231168220861124311720268306174123352305643527876514856055314955388862702614349959742411090490670132071187339537127402543860475879524623122979546209434442044485852276267440647445976189633681322482209401444267471795865702236858383461617520426108189928355730482226455761001796662659038457210357691306093230564870832312340",cs);
	SecureInt fact("3581538068255592113125677591042282971294304950025625863664430870628413281083616914235352051576509792202632613729269153101943327183592565025484710423268186919084083526520261299380423361983874716916084102826918906386528061218764422187297951707340535448610323980284749991911239317079364414706560286578691049924122370899017118635372306358278244955527039395030877555761788229751742812012227074339097373460233654508448477960929548409012850733171233987770119075346502267037775955840033482904210607560443424938005589221822598468003668894413190106350455985066675253129342962523636832246108381468679964303669760455294003507169",cs);
	SecureInt i("3832874510851680443721043109352251755498287038655509626602136580786957356930202438357327661463754054764514686675363897840716901392145307014992706284777072314816995282287792879491193899863109143843886618522076002048714844147958214658618033833399350697262075860321041187887477556992637906465300089124279279587838378389960934461680346610577228060088585348861273784314261473972783611496844377361976961348274456880436971612340017094610906603123855731850886624207622746409399621559346711334815349193730129138641591411956102738948032320311337958901693393846874557737813397568045442946149084788748413252952764552548813336",cs);
	SecureInt result("2935225189419470181616182368236292559538998014345570810559871350418689519865862757045689843326633458312397044903110290080410573649874651902859536047759615527334970912366245741848296117365660637968557231873491128366684954056989142995671529015533257448741523193266047707980340212774578636239060049840089738579556154425014885785686347719727397868889126963089849171172627077428163371506656804141248948772179655804398865089261060499643978071487389625113906548315453518377642381894849210308647989190091067156017889697890257778602263573823045839990483616455032875940527788884069170250813523292415399326857223770348170173220",cs);
	
	int counter = 1;

	do {
		cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
	} while (++counter != MAX_NUM);


	cout << "fact(" << fact.str() << ") = " << result.str() << "\n";

	return 0;
}

