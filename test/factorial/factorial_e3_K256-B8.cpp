#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 50
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("56018010100057782864010051020093471850762689150243528802830867590324308281749","8","2762010084232269539764132931374815022871243807262560067215092326659513110509341464032578916934063773568984355499092620873279275656501969027423926074033182","114004696887335332642824245875660547154534244221028610013879969547807122926270767808568402602642560026751040327450383730356931007338231204816939782585889","2676851696684099424932686609538267534427060790998667344192287901921994998407483901210230796616386510676229496199710379126389393613534761714999403475306892", libgDir, gFunctionName);

	SecureInt num("1722865178411717652492936482575870566769968250791617422208357368608196528510693962288271451695965147387832382295993830379220143118753339613417864165752360",cs);
	SecureInt fact("755663299425430080474821781123991487555929601586535559056619945360580786523195523150976362813394590862818012099720372791426764054690026406957787889120259",cs);
	SecureInt i("2500342153678400278080304893359733927420196015125903406311349855297943682490216079795418794335189726656693541995628460091386954117496154465369347567608717",cs);
	SecureInt result("1008262649156680990225131627982419772137729988925608191940818782130630421192598344572486486478034797501272018745825378990079498020306898961275040026414739",cs);
	
	int counter = 1;

	do {
		cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
	} while (++counter != MAX_NUM);


	cout << "fact(" << fact.str() << ") = " << result.str() << "\n";

	return 0;
}

