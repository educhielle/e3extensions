#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 50
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("154867159054645484969833216699131084377","8","19607361716903413509669502448716168627790658757909952924052633677763369456188","21695599607199597198831615672332555758219651910823745179892394064458191027033","583386579365704727862166317768935357149768693558496119193815628851793677403", libgDir, gFunctionName);

	SecureInt num("14848956035720747016216336235056629483074498474895899635529570849961016265464",cs);
	SecureInt fact("761582121052314663838359678939450229882356390930616809908769398199278199770",cs);
	SecureInt i("2372280808801771617134888038468754634887570077587358729958103019049904483328",cs);
	SecureInt result("12655446812812696459501772913204516109390819948533391947458650606855306493597",cs);
	
	int counter = 1;

	do {
		//cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
		++i;
	} while (++counter != MAX_NUM);

	cout << "fact( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

