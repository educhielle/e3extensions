#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 50
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("41790758143121364043184030120944556133409395745346104257168410688419712465929","8","120358068602865562772129381678511091081518688223346666426563347535314581587711252595903064007177576161532085254314905306163623255073750296662326947475607","1492680011176644656954172567086796104844580411275574657287817919120283897533667178451733309176236688979806614333195660357176782878432058553167881184436363","1591589729268376822414649734148225331916518947125486086390485684410795955323742117868567188816245503962018874593994022834886665612527296144206520971861996", libgDir, gFunctionName);

	SecureInt num("794831153799228426541812439945816628439589178179239957925163130332334709497671119927282959235762229478668737297482364812350063467303415598569123311085172",cs);
	SecureInt fact("191897415218283137800439808465670756818426658291418861346987558275798566687000919396978064284761465153890506896960297543594916737133653166508349226937162",cs);
	SecureInt i("1114801673115113698679692119613906068041345145397566065825720122759500665749429301426434733447188701779853992808768090714913169502694601560412747477665611",cs);
	SecureInt result("1545373410175463755074726226309930301457603073119784643840809499670980995417847601947563404023932167398650704791511816543868003016602048094618748969062241",cs);
	
	int counter = 1;

	do {
		//cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
		++i;
	} while (++counter != MAX_NUM);

	cout << "fact( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

