#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 50
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("163506450000878093659509474834884568821","16","21307680711818593261300524359662452565033294658542832775562048792572871903421","9969687891632442015113253660957459776653373670044766512226389081471311992176","8676833405323416690002117952706404717168411840448672798358981335110966811015", libgDir, gFunctionName);

	SecureInt num("1300604358539372569186553367816946065717509242426117108505229238255835219852",cs);
	SecureInt fact("9023240114627906778589749619030968884968070156101260791141887889336913863202",cs);
	SecureInt i("22084166109952500248916335360075146870161986269449281274354664711607118049648",cs);
	SecureInt result("956723392782628340283925754656468498741847603386485973471728817794430926428",cs);
	
	int counter = 1;

	do {
		cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
	} while (++counter != MAX_NUM);


	cout << "fact(" << fact.str() << ") = " << result.str() << "\n";

	return 0;
}

