#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 50
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("5603053618485812302175422093563932537557360961557490361938089440578948789733992880839047489479567850658604620799518609861652655604095925259472340860070941","8","21282540634840966912949615768004372916976035549982439401801738200512900657385329555367097651888369790518301409709840715936968470792243460316083736905385725975658656757726028911983954517705693423824687182325921919091004795507018979172035447862973746424307288380403253956866771253276763815185890584537775957170","13628719870594564395344480791505940039334193280030612913027208111895272072416451102233199038752644068156978877921692062277502360178022987356406848022163234147049633474320533581365642819345304769276271309877243063496414624110483450204314861640623887002776940059535273202683350461164106030435993527799507847900","15795247781267767384520866593076698590307234701014454301139246599208447210852094890564706088500524124352240176876619659013642317304788845443895590385145239498522752303400867283736303172069446192300755996850906859935812651016931232671048879052210115920275385944084660307657612609794765589434811141804635948666", libgDir, gFunctionName);

	SecureInt num("31185239170735151415013744326966566685316429726545822650066787606598919085014469896631769989287259529576841179588190798486981339088945119442207212508741135385404012554589263695606462792356379427540702466775919269271445507262660044900665476512952333528262732958905154052744417323875704058595700646497825734480",cs);
	SecureInt fact("13860023415273264223763869096507369729502000733883449323943605895388103611871195114078030055186882339207615891053596366451137236250975016599479926351438950565840999506470869253608998437683250188416871905531138870265975098807755455074748107870943705438330099959703406889269520855377154801187440392682597269136",cs);
	SecureInt i("24406951274569104326763942312369295264760512359458309713046150626904601412816920612693380577463782882817580138527331648948950872969608536145234795313118338310774116391692458634459417303263785259184867618662367701429618776583039981205384288986768960023787533286747153803272686388287355297312165347141730782446",cs);
	SecureInt result("18733480358123167011800355292696759728542632240666852715116112361544620181026863509292154896370721208550634310224822424212788962503796036958427199629969651633572399568454182572772822605000435419477557503779794529130843284789649304578736578154215615158492022670854649359909184782503006163956869541426537512577",cs);
	
	int counter = 1;

	do {
		cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
	} while (++counter != MAX_NUM);


	cout << "fact(" << fact.str() << ") = " << result.str() << "\n";

	return 0;
}

