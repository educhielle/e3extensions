#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 50
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("172068682504965940545516009628488865717","8","8129151622105106109654380925002448175519051058827592253392485229543240855541","12665843263875500210991671627959508282576688486634467162063015336868925721748","8663736496485934043191601421457758272992397322596685064572428455712024635177", libgDir, gFunctionName);

	SecureInt num("14653489086795302474410744905138339150526356082594488664157030561610425274211",cs);
	SecureInt fact("16069521918774112151380017753649458856739602938398757785301519300938561751981",cs);
	SecureInt i("28287824079892919878608296037538783807229730774796200886033248549960267821116",cs);
	SecureInt result("5891101830127213696290351176644178552635035702191905672636932946303186561472",cs);
	
	int counter = 1;

	do {
		cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
	} while (++counter != MAX_NUM);


	cout << "fact(" << fact.str() << ") = " << result.str() << "\n";

	return 0;
}

