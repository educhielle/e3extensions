#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 50
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("75309589609829541799533242142991071354055281890183399731601791874354597704597","16","3895689824350714216854504222369621849474156258972551477892160444335245904481646141367580594528345352019853961372929956970197144418759392725757519726252202","4892853980706527724079975533144318608021214036797516237119497317844619066740882858073471210642766327164341581345328240554444895097178728672208800751684737","2962991855680141518275881873283720654105375378871440918193199954837213666072299792047612469356870262249643579612445427948767555635124562575369216363714971", libgDir, gFunctionName);

	SecureInt num("4423910437030618454257518404565351691108935606637279776517848975015244192826422058041714221853463442349713302307885222260041689198057484263613072948059191",cs);
	SecureInt fact("5512210472939067221166516633336235498553284015086648300976364573716016260302043048272440286310464987624022408905350561608645658379389365898450815630727966",cs);
	SecureInt i("5374812689788700072004213624502407191208571681055543605651101890322150787353219287813299228623764672426996078398326980604460861642488070692827346407543252",cs);
	SecureInt result("3079054691775082778604612635483741290332683280903077854728324592211276206389156896720044025789234744839578343346306663760536635689786268755238541465192794",cs);
	
	int counter = 1;

	do {
		cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
	} while (++counter != MAX_NUM);


	cout << "fact(" << fact.str() << ") = " << result.str() << "\n";

	return 0;
}

