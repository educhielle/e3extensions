#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 10
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("8038137134502427717",8,"56874122720375213239459759790454628612",{"5895158115814377807195961777664483189","4668139983797446666494072287903657590","64115574168074775906808116350864142517","39666907254085374358917616649303629711","39116939832745244958446345334937998454","62932136504622892443188241716433061915","2133861884262964946627446328828343631","4693959061801672091846996650835441414","21320977716326056850425574902188208670"},"18709816117490117207104472131141658125","8183801494245344202052711880317280414", libgDir, gFunctionName);

	SecureInt num("42540332204939631320008008700448667389",cs);
	SecureInt fact("37146250080543451983719696825186618652",cs);
	SecureInt i("24266727994479932859998213760180548213",cs);
	SecureInt result("8791367169763927775792035190789521850",cs);
	
	int counter = 1;

	do {
		//cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
		++i;
	} while (++counter != MAX_NUM);

	cout << "fact( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

