#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 50
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("45890657452723055028327428091115370387094930848198753043279252024926519788361","8","1220203137403926311985830077614319044489438975686372023330509436432014936205603657045088248829396408909568346299232957338566253887571107249698145424580646","1196125694375752485898035036754147871104350897674889637982410333291011076165621876810401857677513938406360630816325391198463630593169223749436713718788982","1772333230278092090775200839769441763529623643724319856076505427628964560032406241842495623575131927687887486865360829519300238752507961887766531775866810", libgDir, gFunctionName);

	SecureInt num("437989523956732995810224175900156719911438577520382326036177233780710499276934869139299317812300997799258400821547990756782292432856812020381729520889617",cs);
	SecureInt fact("834413891353205036701748429957877522357688321678263224863908069026408070605220856653092494663635192895980904558869835954282346094508931178911699372994991",cs);
	SecureInt i("1581201971758215261450953829019069810794921048267322638355709523430473547631769929905727743786440584179464010861151270755833893042510716787178030834476707",cs);
	SecureInt result("1856476664450733108332793550780221632864924104517806353298558387726216359454797879929240266648523917382819335483250743580350073600723327415837315225166261",cs);
	
	int counter = 1;

	do {
		cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
	} while (++counter != MAX_NUM);


	cout << "fact(" << fact.str() << ") = " << result.str() << "\n";

	return 0;
}

