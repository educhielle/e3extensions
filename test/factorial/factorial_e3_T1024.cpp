#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 50
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("125208470285983953428188384870907711707987874067337117166626847822514238490791662436087894461945168745629842855937992756923545929438906498997065584939960537294903776281589692333428427052396772085992678416012915765622481511064272888291552882357503922498953358124867910727357446415841556279499608005307215112861","16","6282088259036238904456970874178151162965080957612871029906786860832632613705522279664549390483928391843190234777050538962075072107234717196063613794170717073045107486570426460069977237999373414135850146991045727539568043348010530089702802216570245826104835334198299814834108072405060472694438812670273888193177584181019760972123975391300743829404099871743156795140023207627910183660709562686750442379655354277777494641837496394176738974433451452632078011368607459990035390725167073736480039576138359639415458307885936784643340843175608212987399409768031276408172131277500410140824337837400976205442132276664453358627","13830586671459804562424410457264953920902088505324486003392304338561378595847498929863712271261982726183064918058520735363890397078528043235098857424182639513357643478087458521129354648308188806391347990078923273884296166681132845688642849680643128537081539158376040396928320313488004823360854449205190674800895806719379969744162647120340489210565232345249333058461243544812347972602343778680990145710230846424502440462133828832979990305043857284191301198547013796917098232298643907051377258152407707021986494843069585084938278812044649210119418828042396078117883053876408537574758971864604728887108946020119306039090","12855371154219366325866124034755936898870996788664144983556078438000323501699547808905207734897262069961842331564649427074777652312827220030306129550270873867579945322378341622979413240251491830995746655735215497711922782500648759372230802930960949872091943924637983047172001260622077778496467940981921790727764812514015111752371293708324873261179130897120148983913662039244924692812795223899374752590860772370485947411224855529299103797917633382041438319257016377563621151174629129663781229749461899729990744316009829947535146612534691828544857530472365818629082140568046062107108703832429546578738426784453424709563", libgDir, gFunctionName);

	SecureInt num("7617081407341930067172611377508870649127767652589328988061489287608866686961975407887156561076775752196327650115804027903812285775992545443903871202582732033526072130860908245481644925374316055776311809578710949343919637788792026337223052253889983892454698798681405215871656196683272075922375606510542622730749420518812147074278799968627502308909156302388782611752177273785361679740206436728608151918005664934853568071995545774573484715371741745385176925910120569914308917979845529546302887570765923585952971381486524870476213680927630647444621229026771671363593480799626120157401542764341557927500614502080896378756",cs);
	SecureInt fact("9439226367254454829653245713556791493731056905783602068447231345554526617404423049489969042185909462035233149517730811133969399857392414968828687507315202125203682126260536645966101651994973372380397864447197778794324201057921025358732934455690982568096345633395851713243501909435266685206742267797448417014057363031061900026921169131495649094638565225078143008575092869758163819849623078377019288737239849792400996119233771321763628266550593472340447530630164760201188444055260840488716238632378270184372307708085734702908203212889578028298755263841734746568407297887437416375105826983416436691231294884162827513448",cs);
	SecureInt i("2728751439736505552625469734069140270699719558056688396773518035900192487633748933829809292624248560651665199164358626635102577637586820130991613179119400661042064992259251363866296511179742259583212057229884191136430040270752318485974396008030555980576895534409604001580474468278535851869313493727979238450279323603454471585349458144863944112864306617639938414360718234735573511706763345780308978209382673344816875290637085600867493749269275556890919719038902821995406193707316246874963681049229794505021312707018934388617144320282367375761166149564031908336699154827821887252559532056402233038211635280587389372847",cs);
	SecureInt result("3288821514610626463546055900574913609402551840230624049722367891662674597646471707907618257197430546695366651486590687038412916960428416039557934994223243521928570802642190700758930307932101354278843087274281341688124399070328512669327992390126788900431528525178266504006743558342963580315346674939157345432254810873380025867079198279032087529460506646055147536580991188170168038786328451000358109733295146836326752397462412084348792965923744988216575318964213332702642209424403131470685269177346298130536613934284050029508637232990509943174653469406782234240691851440461933778397646647924236881981813296985025774263",cs);
	
	int counter = 1;

	do {
		cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
	} while (++counter != MAX_NUM);


	cout << "fact(" << fact.str() << ") = " << result.str() << "\n";

	return 0;
}

