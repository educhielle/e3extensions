#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 10
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("17370867087432151981",16,"269547322204775162003117086923521059035",{"114729537716798177415815888663195990817","191174918948913784710295256868814411593","246396580165971869629046360432085100550","225453762304141847658024709324551238604","275283103240844106085302955245917505613","17823259521328223892420657735476105807","201042540487776084416424701700555423873","88674523583760083947760496932287077603","200013476263693056584110912541596212804","31304026858750202837522974537080323819","274982409303456430364922057701680038979","11058361378489929334275760609376326258","262432866463734219864000828964766476295","269290121921552686756415849237883344738","17330742395018861485711167532439959776","219145188080054154663267290639480711078","230095844400413470121443059862197131546"},"189588859623924493076301989024283372028","10916287591128767702155400146618300021", libgDir, gFunctionName);

	SecureInt num("221242426286767515822278939500125258830",cs);
	SecureInt fact("30142998677566868712541617212059911234",cs);
	SecureInt i("10669591783525040232312497306131566679",cs);
	SecureInt result("274930730227070988675830940343068478254",cs);
	
	int counter = 1;

	do {
		//cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
		++i;
	} while (++counter != MAX_NUM);

	cout << "fact( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

