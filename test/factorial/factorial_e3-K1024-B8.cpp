#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 50
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("130554414011933383130129536407055012918457659121720119612527292406827258967055342402795792364130613540225786202134284588217085695673872484873399628227906133287257846163019336017401234760844864372809850993685113529493045180621234238050047148369745716553212618960236468659489738400088896556487327130319548161197","8","13009163633401414914313619043324015908677169351914397459692043287622230351272724709850885138060331498090253327657139824815641053615235398112167366300937177359499334897121769449693571466835113821759285171426847245027577330107451985785921286549924431938776013414860713047423584036598579013382360654009746808909744548926970716274692630393863341975564870767156672632348497319640652210961227565002268459405996184382510452776920392545266514010698043591899556456729342122047480267646314721940264198746891955917000038084340190979208325330427596720968809401177863912944357652590879033416961617603766805937163135835082502284848","5797318072744825916527573323938567583817331224524280163587104384826981668426738899880634172455201278994131691100106697454325739191139900673558643065951898025903658388631810408187981481176019902821004793525128852484792645303717235739704260944065739368469786278902187613549614296147253878656515617927315225186131527109054346704942501691732985106992519273691253016591343996254635462726236010318946993875228640074403561751366506433981191560716793645687270136921973300441288952663986466293866661323896434772578588743110693115244937747132165089467977565376506317376910883320957744196568006520948552688927456084421071500648","15569604714884720228394408084043913382046279009187759555887092880835009503398722185364843369911471867668347130136167685269844620560954655117177692398912094860655838889587784999277760688429495169814214795504880044394046730444610614626173299268732244045218135414031172267372123888459868927043582880110453390899171682372440672555246634656882753195433331052843403695149381985272284281503621166747546320097068922973686360059484443635039642909886500020617184020794639976998476871551737820753445416621141468621456344613016841123411799585971514203096877234541135126119214688965748090384536414427799325032094882703199543080457", libgDir, gFunctionName);

	SecureInt num("3615843777842816652656816951706850217426175494263624732131042378729153550004588842704178595170357373907825216490763485835254588667682730536126281956002680108053217216886556540970011478029651318745350503795537827284614788063374953692709316403641794836558104013927161670749896931224695039264663892715360862746701894260488719432244860952041531867682971225986900927183154902930278074639965348898303903395273400487156886215478634786111698014920270649025902321625116914472503243705941303193887607662085032234149186888413475200218427119554168194235055372594407446507641768368677823848048442413377176714905881327287204780516",cs);
	SecureInt fact("1681819102079527797337457119806859319509662918790593470037134164649263060838593243898293936148713476645037445253319159861207752182754822984513083004771423982410742930733637977179003595664172751426665332956919213011325829936607125660210651335435110623107948532278347441109573062675265975392738202406189539711973578851103062055996711384897646834390317571647998389454847876928953916458365138726054185189671122396953009789578542639502399678011723847217604353148438401151856639329677771001140253624902101130122920919625074116274468329813207133281152580522918904324266502060319425433276680734339440483548957881836689215735",cs);
	SecureInt i("2377269958316005149448650788311402864712667915404405223810116843598116167541999329769567269691192946894934751484360424483582420647553861071366260472486795192753059934286326893625867992814350613664440054426571787185113252986048941639835003675786206556168202600121497734704418886474269342733493376586991098319319403448352886115609340585134676834024172355391300597581371110307808728358357327173877819191930476122639100168357354809208180301411074423064216806856653202678606384043937506013324080561149287554222214632232465126895815779839340387827754107030856574410587476366074397465355371263631122742023957999460865154482",cs);
	SecureInt result("5090611104264903295327056472751930484032180610789498743267832772642022059702230309315740569114616292114631584006239709902980435454770712556387682909150622500731038039123746480292728736315715770546957816814209778723039845256321968314850488768714945240907307003582116737219446892301279173753379713058493258555559844181905382712467852812136266750544722498184482041769800289583974923193389643177193749390213640118107018735310602768131370586355044093031897359411473601771298804293998312347811818982898242418737669884604492080154747519029945106200779320974880268766871672652236306902042743205240380466899500163559026845258",cs);
	
	int counter = 1;

	do {
		//cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
		++i;
	} while (++counter != MAX_NUM);

	cout << "fact( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

