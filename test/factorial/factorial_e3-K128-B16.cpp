#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

#define MAX_NUM 10
//#define NUM 5

string libgDir = "./libg.so";
string gFunctionName = "libg";

int main()
{
	Cryptosystem cs("327256057733747882393061532475698250669",16,"4652740268737620300156941050847680562333201099775981007489294410144108864565",{"30639117158573024716809452803853797454653143371807244821086863393142032275336","28291784748300269936756014718843439532781052500566699554966011062303775116028","21070793372880389537305374942697690758555743571316306263608265329193849353298","101801832015617996129524022186101912280758905643279329910840019632504327057519","78853635884416393326058130193736522377171440107639575056765351875931604280373","7397702728082843321862178480620354748611070948018462216270672633151347749707","36453089602863101856030716268967062666929000249603696740026834581352245550848","106499688746534730800093722977007128563460692198776135486903077867714373497503","87760361754599647757311846751802280790961421700820354236213662366460162495060","39929271520760191389803381498658534907120920421450731342559442273585825097308","4205004013003367736316740192027551878089240350501253649148672708173678425066","24578087587428004415704270691616147609921902721315752813523044519766891629157","86780530700465968611911868802007240933297626114296474475010467338962490600910","62953334020428433740252810241971683949855630252654438057027450702856896387687","27052230007754228003588661014612430457234397337908504862277518883457494166600","43244114719197204079728475366467745835584467239133808008060790334080168849999","8501538854000513738727997478549049002251633642610066592195170096576996700622"},"16246127175663178045397621528311368078940569330910284026944496937592882796618","80777459225903825407867751214940610904674843677797106764769921810084307186743", libgDir, gFunctionName);

	SecureInt num("19967078162445981925589450145898749511361474694167028391705885307525145708032",cs);
	SecureInt fact("86101420707187334054018544857631862869937514541241937198879131250356992336402",cs);
	SecureInt i("82466320453162235428470353276555478350975005740022111216519911762580277280273",cs);
	SecureInt result("98789330484574467385873620561992340146953560505791844277691640038841626616830",cs);
	
	int counter = 1;

	do {
		//cout << counter << "...\n";
		fact *= i;
		result += (i == num) * fact;
		++i;
	} while (++counter != MAX_NUM);

	cout << "fact( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}

