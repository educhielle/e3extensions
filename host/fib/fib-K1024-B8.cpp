#include <iostream>
#include "../../src/e3extensions/secureint.h"

using namespace std;

string libgDir = "./libg.so";
string gFunctionName = "libg";

#define MAX_NUM 10
//#define NUM 7

int main()
{
	Cryptosystem cs("100350365830905777709508045113104182457769876742751681787763912220159894140548046610274222100458370785274769250973719480577958465364421488106397708427121385363258400688653127109472078541061983224108400117350772989624191013728460273563175409836689429872530973179017215156930885092171537281469103538210269503741",8,{"6528225053967572871726410634734881694681912794356335207625082823518564541378555850488435599885126098372566609276099286777617272944430806736331313528713245015103152294069002765440025519048168352586178684842662080663288484674534829830099616985788733967120739980292269618306433206791574347829036134928684183981952388291712461960780586563715831766522164658859438618752254603396690992761018845757477833546965183861213097840280149330552898152791811470795511360499777618636420975308822175867372415215852542808209007773716064456673906338080886096234548242899264364962738993528603734012123928213239033960769269884953016259621","7880771480764253973118785516699685014378574669187277790012355817742495276940939555093600259724325751428144512995568167987742601855761514996917399581525150464191354568729790865677555402994484039295391518285028614465605862615808088726859216312797948639201911480661655055647446392805114197846470313559992149847786760914932273050340439970874332211893715866821426020027275813111838815396704072894931835172637310168477695190964964760143984220852242109745382186102891764749989424116213068397343785698135264128592425384300321606214275740713878983764496730146864010530559771120731303263115180968284742964061913072083071742400","4384054245792961954383629739178194121128094841120959374455232243125286405483670191356469769276692183871975266293622915228026532193570540088065786831507517560891531503942070295717601964485794979725948759376906718402108707969365742389997484102878014952631303065523553446097424436472078027659403767411706079688841508968825762797237703389027599163598701263248769462978519608277518589112293308654050251886227785528894717421713150327211178440756877081450202777340979584683797620940422760562585757033957743792592962687218884164775544855031628137532602496653936039826724481032537438238015872904776039082515156382982799141785","7744645323000407853834368682346677882343383784961366293730692062217853659983479093595223889553062025589979154400667512235939342655553960253525654608898258462531257340363751026193101428463179767957055460769686308824615106786550092291324352607349568979199429129448768870082804784845235211871059091278805863556457621746519784312017222579695153769004022128963579658332727927396967186367250484871241264394465648073393497814671900089645322624814330424586907086483973928228740319692218846505725044527490551676873932678937935433388881133622751269356127284725544017590716373552506486259861125131829029999570522083557810556547","2844261397382048272715721040774421208276420313686111018971353256166997525451951204034071116635889731484263316673133886631079360729999739243322677734429735224444643866887296202754339124159351610962092877727167905927126116572861039603539464292867042620895888282124494001357605290966866888104543476982880092156820765260496089904025043167491167469505407584836900645738785546554662657033523505618627035052408221409343941657096581710951985967600835013843426249155117738390970894796991793795781041059387667652288089705118906680101498226742734519010881919443543612758820748790315907963528460980336689786961987186492648983861","5887346203302705003441057068914733466225198911188511960841213071683026795668431982280339976094955315773483510572551522377940627853033804757907238433703846711818655856546132562930707096602731060087685428811689900203557987880369735464994990271780174700306113402605905836977825849534883043729274219852689853845512787297433236098429566926101218251305877798042890824617728379088041966314745099366074136959382704202688033093337195169085181266783308282682172635759037797765217648998484485120769571952010580319768813571552099675028335184859629796775864241132654124945922810445371236921948840044304962138401438853119757731869","6640003470348416777414289083584524110953875917933090574084917091707648783556329961455279540002560896153649538910076534751123881307758798560968343782405729900709354850241856924288334989423333679034364129851796519591999808628927199128211885193676997188943889936702220597751281491413808423970141502023845695358128024738639589820726214751686870454070172735615993013022658456372590304545343819684064325366962059573392542995940595729459270149844759384148560511845332966601511414065883579465376943907385385524966667683682541299132062683803586212603827807874698095496383608785798346584244461852004032411118011011975811434386","4636697483284899742107789981950705652858514882371091551854180793547310200369506672636794398954654372093557088775508889836922440964875945809116087026270640450441597826361557579668180639972785708749798708931353809714801308627057401180985698963118244810693322505861407104360890547767790144209537934913230451423430382246852534735762235508218221828974484640820929519098296738311650050195776795371253985852283171002254502658206412658593116382600966249159666964928845384743504533389550245441624643121463209039982207360540276855558957076073491462092941885729005847345154368027939459749835983038926416757378369918288181165353","3413356051969258202760160927272806667210618029252968316739548816620575892660586308497614421957001758900033636331763350529377929790150243210988267960478537448117801465851810587392278730356969612741664146128274484513655699533965809986806081995300892761076539675477102537254293045739898068212086261355209466482957324322787617885181871842721680917753713058555502708712423616239244538362363104024919789307174762781348201005044554124873495431326553710459292718494515918208317756998345798391671401935588332383058954783754775336090253760799796113248724674439294621840961665880888482684609128892681432803623971479829196011312"}, libgDir, gFunctionName);

	SecureInt num("9309409217797279936797188946565662778024829169733849921174127777061599635059739271511058339708848959554420685299410888718715591466420266491951545377252403945100643083330108950896267759405403289689092803926408131637634759378270541895854195512219841936100054827583345450702830372244280791385655060608101319727785285693821679170166736894131992912638350154596430673845990878214344390984282962288327539072500669727154354607434710554147522365801092245553133171169453177285138245877181743517864972142912263674874770073461883030036763350542937426594139062739090372264029227965247257281634934171938188080103204635248785354856",cs);
	SecureInt f1("125864991388268107760333826084392242734802185070520174400490662712572259330519366388164627232917335667335376871663570428249072854191451858872628675054328833847595807134535301040604102976006385119502885213608187699486491627928122977042212479259197374184405128755918755992487272686331673754074106401629724791134306462391989720735170887191515208675026122504500533289824909118984167769242759807895717925008730017832106132128729860297561655849619949620760609129413188993915724300708728621884147240610106346750857878959475637408989515239911678462788454771343773284700291612365491840933050764277502608013504214205222657026",cs);
	SecureInt f2("172517162687807125323464416823329705060009732059677784687206274459436887683659636697064431275520581016625988580776383546698792434830157730946177959134932997400475057112691460242051163815930363902710286740054805543610650538242975533790410661611527299476205373274322136730176502873957218062165429776865352820488841488369521961134341464618646822404968238349321530485606907570215399178554667833169199196835265709216946536417682221322744276997201978672851069067215402467353459065770119371681303211767140004517622179986641272162972467418371729305453917557072150589077163506684668884693807692604187429035876180488737040123",cs);
	SecureInt fi("4524564154123536873698865404282951900508776997828931387811076614636563879035398497599516526105726273380438203505249179548956024450257767734023413114155585963181558857701935044540523297875491144331760207060224306730149955200829174481511066419911904240600300980401205135319671934160469086266199504644286034682346822703799954947924336823530570567926544416835152741839300622298788372710001170040011371073201029488548346237507005855710195309501947382919278315551199135410292071430595976601536115787058511630693001659916499564765099832294448362137449603756221159022706078718359182997404594909348001753105497358124041205485",cs);
	SecureInt i("6245928483857487132538500115801124210223192089585495935326840747516378248461388591389539486105422623689633805639036206623274072649894674355197903496086964904431013826324045979557476671162034924315601408762819029391958488074854621241608177801861809246947573775122112464821982998953974839445459582883546722383008890791638156246404338602653288971777119110878816467058488645734508311754788171373579868550640922011384301320782209851883296523596464969451733237566985688120010161220263973894456142529437634752632046647967590577661715893849889995990287417162998204479232111242084656651211796310162929238480160594151110933558",cs);
	SecureInt result("2891656113461635868808742549756068765102661538903132501406980263219932787983559356399219914213976773833575414967883131262274757286320921958549556889338212355717195459661203497231107990207427288042267895143158485618561650528416804351714125099650605761525167989846051200086023154984803405665287977732644439867758268229472220161728389093991352393158575130194766173642677851639115292220786164916140767480553867230222839037295999360796308552434416064626146518322803619053836715026680141264105443189186432887878737492906906367478409161348119185897853886168188643727848933125849593538489671520179270465524638355134189911478",cs);

	int counter = 1;
	do {
		result += (i == num) * fi;
		fi = f1 + f2;
		f1 = f2;
		f2 = fi;
		++i;
	} while (++counter != MAX_NUM);
	cout << "fib( " << num.str() << " ) = " << result.str() << "\n";

	return 0;
}
